# This is a basic workflow to help you get started with Actions
name: PullRequestCI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8.10]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Relative path
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: python3 -m pip install -r dev_env/pip3_requirements.txt

      - name: Run Unit Tests
        run: python3 -m unittest discover -s test/
      
      - name: Run Integration Tests
        run: python3 -m unittest discover -s test_integration/

  version-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: 3.8.10 # Lowest TF2 version I could initially download in ci
            tensorflow-version: 2.2.0
            keras-version: 2.3.1
          - python-version: 3.8.10
            tensorflow-version: 2.3.0
            keras-version: 2.3.1
          - python-version: 3.8.10
            tensorflow-version: 2.4.0
            keras-version: 2.3.1
          - python-version: 3.8.10
            tensorflow-version: 2.5.0
            keras-version: 2.3.1
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Relative path
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: python3 -m pip install tensorflow==${{matrix.tensorflow-version}} keras==${{matrix.keras-version}} keyboard==0.13.5

      - name: Check All Versions
        run: |
          python3 --version
          python3 -m pip freeze

      - name: Run Unit Tests
        run: python3 -m unittest discover -s test/
